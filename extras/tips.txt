26-03-2020

1)try to minimise the number of variables use . ex- list.add(scanner.nextInt()), here you don't have to use another variable 
to take input.
2)while searching something in any data structure, use try catch block for the numbers not found to avoid errors.
3)always choose which data structure to use like for insertion deletion always use Linked List.
4)Inbuilt LinkedList class object cannot be indexed, you cannot define it's size like ArrayList.
LinkedList<Integer> list = new LinkedList<Integer>();
ArrayList<integer> list = new ArrayList<Integer>(n);
5)taking input for 'int' -- scanner.nextInt();
taking input for 'String' -- scanner.next();
6)Convert the String into Character array using String.toCharArray() method.
To access Character at the specific index in an character array -- s.charAt(index)
7)for getting length of array -- arr.length
for getting length of String -- s.length()
8)when you write multiple if statements without else if ladder then don't put a 'else' case as if the
1st case is not satisfied then it will go to else part directly, though there are other parts.
9)It is preferavle not to write any code after return statement as it will show unreachable error.
10)while(n>0),n--
11)you can make array/list of arrays,integers,objects,etc.

27-03-2020
1)always consider corner cases i.e, in case of linked lists take care of null pointer exception or 
operation at head.
2)BufferReader is faster than Scanner.
3)you can't interchange boolean for integer in java.ex if(true) and if(1) are not same.
4)Arrays.sort(arr)
5)sometimes it might feel that some test cases are automatically covered but better to look for all corner cases 
and exceptions.

28-03-2020
1)sometimes you should write smae thing in a different manner.
ex- while(!(sum1==sum2&&sum2==sum3&&sum3==sum1))
    while(sum1!=sum2 && sum2!=sum3 && sum1!=sum3)

29-03-2020
1)string.substring(inclusive starting index, exclusive ending index)
2)string1.compareTo(string2) -- >0(greater) -- 0(equal) -- <0(small)
3)You can use two stacks to reverse any linear data structure.
4)Head of the queue is the oldest element at the front.
5)poll means removing the retriving n removing the head of the queue.
6)Instead of looping ,use recursive approach to traverse trees with return + 1;

31-03-2022
1)since the main block in static , you can use static block to initialise soemtihing ot take input 
and check for Exceptions/error/corner cases before sending the data to main method for further usage.
2)Actually you don't pass anything to main method from static block, after the static block is executed
programs automatically shifts to main method.
3)The variables declared inside static block are limited to scope of static block like local variable.
if you want to use the same variables in other functions then use 'static' keyword and declare out side 
static bloc. refer static initializer program.
4)A class outside the file name class can't be static, it can be directly accessed inside main like any
other class.
 
3-4-2020
1)if you have use elements in FIFO order use queue(level order traversal).
2)If you to perform anything in LIFO order use Stack(reverse levelorder traversal).

4-4-2020
1)you can use queue to rotate left any any linear data structure. just like stack is used to reverse
the order.YOU can simply poll and add in the same queue.

6-4-2020
1)String.valueOf(char array) to convert char array to string.
2)while iterating don't use , s.size() directly inside the loop as condition as it is updated in 
every iteration. it's always better to maintain a count.
3)to reduce time complexity use variables with for loop instead of (!s.isEmpty()) like functions.

9-4-2020
1)Collections.frequency(ArrayList,object_to_find)..object can be character,integer,string.

27-04-2020
1)Declare new nodes like Node x = new Node(0); instead of Node x = null;This might create null pointer exception.
